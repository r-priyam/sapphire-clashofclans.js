{
	// Place your sapphire-template workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Command": {
		"scope": "typescript",
		"prefix": "command",
		"body": [
			"import { ApplyOptions } from '@sapphire/decorators';",
			"import { Command, ChatInputCommand } from '@sapphire/framework';",
			"",
			"@ApplyOptions<ChatInputCommand.Options>({",
			"\tdescription: ''",
			"})",
			"export class ${1:CommandName} extends Command {",
			"\tpublic override registerApplicationCommands(registry: ChatInputCommand.Registry) {",
			"\t\tregistry.registerChatInputCommand((builder) => builder.setName(this.name), { idHints: [''] });",
			"\t}",
			"",
			"\tpublic override async chatInputRun(interaction: ChatInputCommand.Interaction<'cached'>) {",
			"\t\t//",
			"\t}",
			"}",
			""
		],
		"description": "Creates a SlashCommand class"
	}
}
